pipeline {
    agent { label 'docker' }
    environment {
        DOCKERHUB_CREDENTIALS = credentials('docker-hub-creds') // Configure Jenkins with your Docker Hub credentials ID
        DOCKER_REGISTRY = 'yaniv8360'
        REPO_NAME = 'be-exam'  // Change to 'be-exam' when creating the backend pipeline
        IMAGE_TAG = "${env.BUILD_NUMBER}"
    }
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'argo-jenkins-exam', url: 'https://github.com/yaniv8360/devopshift-welcome.git'
            }
        }
        stage('Lint & Security Scan') {
            steps {
                sh 'pip install flake8 bandit'
                sh 'flake8 . ||true'
                sh 'bandit -r . ||true'
            }
        }
        stage('Install Dependencies') {
            steps {
                sh 'pip install -r exam-code/docker/be/requirements.txt'
            }
        }
        stage('Build Docker Image') {
            steps {
                sh """
                    cd exam-code/docker/be/
                    docker build -t yaniv8360/be-exam:${IMAGE_TAG} .
                    docker tag yaniv8360/be-exam:${IMAGE_TAG} yaniv8360/fe-exam:latest
                """
            }
        }
        stage('Run Tests in Container') {
            steps {
                sh "docker run --rm yaniv8360/be-exam:${IMAGE_TAG} pytest tests/"
            }
        }
        stage('Integration Test with Docker Compose') {
            steps {
                sh '''
                    curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && chmod +x /usr/local/bin/docker-compose
                    docker-compose -f exam-code/docker/docker-compose.yaml down ||true
                    sleep 5
                    docker-compose -f exam-code/docker/docker-compose.yaml up -d

                '''
                    sleep time: 20, unit: 'SECONDS'
                    sh 'docker ps | grep -q 5001 && echo "Port 5001 is mapped and the container is running." || exit 1 '
            }
        }
        stage('Push to Docker Hub') {
            steps {
                sh """
                    echo \$DOCKERHUB_CREDENTIALS_PSW | docker login -u \$DOCKERHUB_CREDENTIALS_USR --password-stdin
                    docker push yaniv8360/be-exam:${IMAGE_TAG}
                    docker push yaniv8360/be-exam:latest
                """
            }
        }
    }
}
